// Generated by Dagger (https://dagger.dev).
package com.maltaisn.notes.ui.main;

import androidx.lifecycle.SavedStateHandle;
import com.maltaisn.notes.model.JsonManager;
import com.maltaisn.notes.model.LabelsRepository;
import com.maltaisn.notes.model.NotesRepository;
import com.maltaisn.notes.model.PrefsManager;
import com.maltaisn.notes.model.ReminderAlarmManager;
import dagger.internal.DaggerGenerated;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class MainViewModel_Factory {
  private final Provider<NotesRepository> notesRepositoryProvider;

  private final Provider<LabelsRepository> labelsRepositoryProvider;

  private final Provider<PrefsManager> prefsManagerProvider;

  private final Provider<JsonManager> jsonManagerProvider;

  private final Provider<ReminderAlarmManager> reminderAlarmManagerProvider;

  public MainViewModel_Factory(Provider<NotesRepository> notesRepositoryProvider,
      Provider<LabelsRepository> labelsRepositoryProvider,
      Provider<PrefsManager> prefsManagerProvider, Provider<JsonManager> jsonManagerProvider,
      Provider<ReminderAlarmManager> reminderAlarmManagerProvider) {
    this.notesRepositoryProvider = notesRepositoryProvider;
    this.labelsRepositoryProvider = labelsRepositoryProvider;
    this.prefsManagerProvider = prefsManagerProvider;
    this.jsonManagerProvider = jsonManagerProvider;
    this.reminderAlarmManagerProvider = reminderAlarmManagerProvider;
  }

  public MainViewModel get(SavedStateHandle savedStateHandle) {
    return newInstance(notesRepositoryProvider.get(), labelsRepositoryProvider.get(), prefsManagerProvider.get(), jsonManagerProvider.get(), reminderAlarmManagerProvider.get(), savedStateHandle);
  }

  public static MainViewModel_Factory create(Provider<NotesRepository> notesRepositoryProvider,
      Provider<LabelsRepository> labelsRepositoryProvider,
      Provider<PrefsManager> prefsManagerProvider, Provider<JsonManager> jsonManagerProvider,
      Provider<ReminderAlarmManager> reminderAlarmManagerProvider) {
    return new MainViewModel_Factory(notesRepositoryProvider, labelsRepositoryProvider, prefsManagerProvider, jsonManagerProvider, reminderAlarmManagerProvider);
  }

  public static MainViewModel newInstance(NotesRepository notesRepository,
      LabelsRepository labelsRepository, PrefsManager prefsManager, JsonManager jsonManager,
      ReminderAlarmManager reminderAlarmManager, SavedStateHandle savedStateHandle) {
    return new MainViewModel(notesRepository, labelsRepository, prefsManager, jsonManager, reminderAlarmManager, savedStateHandle);
  }
}
