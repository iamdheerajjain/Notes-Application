// Generated by Dagger (https://dagger.dev).
package com.maltaisn.notes.ui.settings;

import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import dagger.internal.QualifierMetadata;
import javax.inject.Provider;

@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class ImportPasswordDialog_MembersInjector implements MembersInjector<ImportPasswordDialog> {
  private final Provider<ImportPasswordViewModel.Factory> viewModelFactoryProvider;

  public ImportPasswordDialog_MembersInjector(
      Provider<ImportPasswordViewModel.Factory> viewModelFactoryProvider) {
    this.viewModelFactoryProvider = viewModelFactoryProvider;
  }

  public static MembersInjector<ImportPasswordDialog> create(
      Provider<ImportPasswordViewModel.Factory> viewModelFactoryProvider) {
    return new ImportPasswordDialog_MembersInjector(viewModelFactoryProvider);
  }

  @Override
  public void injectMembers(ImportPasswordDialog instance) {
    injectViewModelFactory(instance, viewModelFactoryProvider.get());
  }

  @InjectedFieldSignature("com.maltaisn.notes.ui.settings.ImportPasswordDialog.viewModelFactory")
  public static void injectViewModelFactory(ImportPasswordDialog instance,
      ImportPasswordViewModel.Factory viewModelFactory) {
    instance.viewModelFactory = viewModelFactory;
  }
}
