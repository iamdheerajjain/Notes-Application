// Generated by Dagger (https://dagger.dev).
package com.maltaisn.notes.ui.settings;

import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import dagger.internal.QualifierMetadata;
import javax.inject.Provider;

@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class ExportPasswordDialog_MembersInjector implements MembersInjector<ExportPasswordDialog> {
  private final Provider<ExportPasswordViewModel.Factory> viewModelFactoryProvider;

  public ExportPasswordDialog_MembersInjector(
      Provider<ExportPasswordViewModel.Factory> viewModelFactoryProvider) {
    this.viewModelFactoryProvider = viewModelFactoryProvider;
  }

  public static MembersInjector<ExportPasswordDialog> create(
      Provider<ExportPasswordViewModel.Factory> viewModelFactoryProvider) {
    return new ExportPasswordDialog_MembersInjector(viewModelFactoryProvider);
  }

  @Override
  public void injectMembers(ExportPasswordDialog instance) {
    injectViewModelFactory(instance, viewModelFactoryProvider.get());
  }

  @InjectedFieldSignature("com.maltaisn.notes.ui.settings.ExportPasswordDialog.viewModelFactory")
  public static void injectViewModelFactory(ExportPasswordDialog instance,
      ExportPasswordViewModel.Factory viewModelFactory) {
    instance.viewModelFactory = viewModelFactory;
  }
}
