// Generated by Dagger (https://dagger.dev).
package com.maltaisn.notes.receiver;

import com.maltaisn.notes.model.NotesRepository;
import com.maltaisn.notes.model.ReminderAlarmManager;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import dagger.internal.QualifierMetadata;
import javax.inject.Provider;

@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class AlarmReceiver_MembersInjector implements MembersInjector<AlarmReceiver> {
  private final Provider<ReminderAlarmManager> reminderAlarmManagerProvider;

  private final Provider<NotesRepository> notesRepositoryProvider;

  public AlarmReceiver_MembersInjector(Provider<ReminderAlarmManager> reminderAlarmManagerProvider,
      Provider<NotesRepository> notesRepositoryProvider) {
    this.reminderAlarmManagerProvider = reminderAlarmManagerProvider;
    this.notesRepositoryProvider = notesRepositoryProvider;
  }

  public static MembersInjector<AlarmReceiver> create(
      Provider<ReminderAlarmManager> reminderAlarmManagerProvider,
      Provider<NotesRepository> notesRepositoryProvider) {
    return new AlarmReceiver_MembersInjector(reminderAlarmManagerProvider, notesRepositoryProvider);
  }

  @Override
  public void injectMembers(AlarmReceiver instance) {
    injectReminderAlarmManager(instance, reminderAlarmManagerProvider.get());
    injectNotesRepository(instance, notesRepositoryProvider.get());
  }

  @InjectedFieldSignature("com.maltaisn.notes.receiver.AlarmReceiver.reminderAlarmManager")
  public static void injectReminderAlarmManager(AlarmReceiver instance,
      ReminderAlarmManager reminderAlarmManager) {
    instance.reminderAlarmManager = reminderAlarmManager;
  }

  @InjectedFieldSignature("com.maltaisn.notes.receiver.AlarmReceiver.notesRepository")
  public static void injectNotesRepository(AlarmReceiver instance,
      NotesRepository notesRepository) {
    instance.notesRepository = notesRepository;
  }
}
