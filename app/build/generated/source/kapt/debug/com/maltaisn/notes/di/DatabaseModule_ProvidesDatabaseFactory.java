// Generated by Dagger (https://dagger.dev).
package com.maltaisn.notes.di;

import android.content.Context;
import com.maltaisn.notes.model.NotesDatabase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class DatabaseModule_ProvidesDatabaseFactory implements Factory<NotesDatabase> {
  private final Provider<Context> contextProvider;

  public DatabaseModule_ProvidesDatabaseFactory(Provider<Context> contextProvider) {
    this.contextProvider = contextProvider;
  }

  @Override
  public NotesDatabase get() {
    return providesDatabase(contextProvider.get());
  }

  public static DatabaseModule_ProvidesDatabaseFactory create(Provider<Context> contextProvider) {
    return new DatabaseModule_ProvidesDatabaseFactory(contextProvider);
  }

  public static NotesDatabase providesDatabase(Context context) {
    return Preconditions.checkNotNullFromProvides(DatabaseModule.INSTANCE.providesDatabase(context));
  }
}
