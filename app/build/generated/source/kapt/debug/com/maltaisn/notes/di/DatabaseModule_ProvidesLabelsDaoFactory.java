// Generated by Dagger (https://dagger.dev).
package com.maltaisn.notes.di;

import com.maltaisn.notes.model.LabelsDao;
import com.maltaisn.notes.model.NotesDatabase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class DatabaseModule_ProvidesLabelsDaoFactory implements Factory<LabelsDao> {
  private final Provider<NotesDatabase> databaseProvider;

  public DatabaseModule_ProvidesLabelsDaoFactory(Provider<NotesDatabase> databaseProvider) {
    this.databaseProvider = databaseProvider;
  }

  @Override
  public LabelsDao get() {
    return providesLabelsDao(databaseProvider.get());
  }

  public static DatabaseModule_ProvidesLabelsDaoFactory create(
      Provider<NotesDatabase> databaseProvider) {
    return new DatabaseModule_ProvidesLabelsDaoFactory(databaseProvider);
  }

  public static LabelsDao providesLabelsDao(NotesDatabase database) {
    return Preconditions.checkNotNullFromProvides(DatabaseModule.INSTANCE.providesLabelsDao(database));
  }
}
