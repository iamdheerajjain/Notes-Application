// Generated by Dagger (https://dagger.dev).
package com.maltaisn.notes.model;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class DefaultNotesRepository_Factory implements Factory<DefaultNotesRepository> {
  private final Provider<NotesDao> notesDaoProvider;

  private final Provider<PrefsManager> prefsProvider;

  public DefaultNotesRepository_Factory(Provider<NotesDao> notesDaoProvider,
      Provider<PrefsManager> prefsProvider) {
    this.notesDaoProvider = notesDaoProvider;
    this.prefsProvider = prefsProvider;
  }

  @Override
  public DefaultNotesRepository get() {
    return newInstance(notesDaoProvider.get(), prefsProvider.get());
  }

  public static DefaultNotesRepository_Factory create(Provider<NotesDao> notesDaoProvider,
      Provider<PrefsManager> prefsProvider) {
    return new DefaultNotesRepository_Factory(notesDaoProvider, prefsProvider);
  }

  public static DefaultNotesRepository newInstance(NotesDao notesDao, PrefsManager prefs) {
    return new DefaultNotesRepository(notesDao, prefs);
  }
}
