// Generated by view binder compiler. Do not edit!
package com.maltaisn.notes.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.maltaisn.notes.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogExportPasswordBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final TextInputEditText passwordInput;

  @NonNull
  public final TextInputLayout passwordInputLayout;

  @NonNull
  public final TextInputEditText passwordRepeat;

  @NonNull
  public final TextInputLayout passwordRepeatLayout;

  private DialogExportPasswordBinding(@NonNull ScrollView rootView,
      @NonNull TextInputEditText passwordInput, @NonNull TextInputLayout passwordInputLayout,
      @NonNull TextInputEditText passwordRepeat, @NonNull TextInputLayout passwordRepeatLayout) {
    this.rootView = rootView;
    this.passwordInput = passwordInput;
    this.passwordInputLayout = passwordInputLayout;
    this.passwordRepeat = passwordRepeat;
    this.passwordRepeatLayout = passwordRepeatLayout;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogExportPasswordBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogExportPasswordBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_export_password, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogExportPasswordBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.password_input;
      TextInputEditText passwordInput = ViewBindings.findChildViewById(rootView, id);
      if (passwordInput == null) {
        break missingId;
      }

      id = R.id.password_input_layout;
      TextInputLayout passwordInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (passwordInputLayout == null) {
        break missingId;
      }

      id = R.id.password_repeat;
      TextInputEditText passwordRepeat = ViewBindings.findChildViewById(rootView, id);
      if (passwordRepeat == null) {
        break missingId;
      }

      id = R.id.password_repeat_layout;
      TextInputLayout passwordRepeatLayout = ViewBindings.findChildViewById(rootView, id);
      if (passwordRepeatLayout == null) {
        break missingId;
      }

      return new DialogExportPasswordBinding((ScrollView) rootView, passwordInput,
          passwordInputLayout, passwordRepeat, passwordRepeatLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
