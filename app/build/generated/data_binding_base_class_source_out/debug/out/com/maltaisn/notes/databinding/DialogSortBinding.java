// Generated by view binder compiler. Do not edit!
package com.maltaisn.notes.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.maltaisn.notes.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogSortBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final RadioButton sortDirectionAscRadio;

  @NonNull
  public final RadioButton sortDirectionDescRadio;

  @NonNull
  public final TextView sortDirectionHeaderTxv;

  @NonNull
  public final RadioGroup sortDirectionRadioGroup;

  @NonNull
  public final RadioButton sortFieldAddedRadio;

  @NonNull
  public final TextView sortFieldHeaderTxv;

  @NonNull
  public final RadioButton sortFieldModifiedRadio;

  @NonNull
  public final RadioGroup sortFieldRadioGroup;

  @NonNull
  public final RadioButton sortFieldTitleRadio;

  private DialogSortBinding(@NonNull ScrollView rootView,
      @NonNull RadioButton sortDirectionAscRadio, @NonNull RadioButton sortDirectionDescRadio,
      @NonNull TextView sortDirectionHeaderTxv, @NonNull RadioGroup sortDirectionRadioGroup,
      @NonNull RadioButton sortFieldAddedRadio, @NonNull TextView sortFieldHeaderTxv,
      @NonNull RadioButton sortFieldModifiedRadio, @NonNull RadioGroup sortFieldRadioGroup,
      @NonNull RadioButton sortFieldTitleRadio) {
    this.rootView = rootView;
    this.sortDirectionAscRadio = sortDirectionAscRadio;
    this.sortDirectionDescRadio = sortDirectionDescRadio;
    this.sortDirectionHeaderTxv = sortDirectionHeaderTxv;
    this.sortDirectionRadioGroup = sortDirectionRadioGroup;
    this.sortFieldAddedRadio = sortFieldAddedRadio;
    this.sortFieldHeaderTxv = sortFieldHeaderTxv;
    this.sortFieldModifiedRadio = sortFieldModifiedRadio;
    this.sortFieldRadioGroup = sortFieldRadioGroup;
    this.sortFieldTitleRadio = sortFieldTitleRadio;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogSortBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogSortBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_sort, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogSortBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.sort_direction_asc_radio;
      RadioButton sortDirectionAscRadio = ViewBindings.findChildViewById(rootView, id);
      if (sortDirectionAscRadio == null) {
        break missingId;
      }

      id = R.id.sort_direction_desc_radio;
      RadioButton sortDirectionDescRadio = ViewBindings.findChildViewById(rootView, id);
      if (sortDirectionDescRadio == null) {
        break missingId;
      }

      id = R.id.sort_direction_header_txv;
      TextView sortDirectionHeaderTxv = ViewBindings.findChildViewById(rootView, id);
      if (sortDirectionHeaderTxv == null) {
        break missingId;
      }

      id = R.id.sort_direction_radio_group;
      RadioGroup sortDirectionRadioGroup = ViewBindings.findChildViewById(rootView, id);
      if (sortDirectionRadioGroup == null) {
        break missingId;
      }

      id = R.id.sort_field_added_radio;
      RadioButton sortFieldAddedRadio = ViewBindings.findChildViewById(rootView, id);
      if (sortFieldAddedRadio == null) {
        break missingId;
      }

      id = R.id.sort_field_header_txv;
      TextView sortFieldHeaderTxv = ViewBindings.findChildViewById(rootView, id);
      if (sortFieldHeaderTxv == null) {
        break missingId;
      }

      id = R.id.sort_field_modified_radio;
      RadioButton sortFieldModifiedRadio = ViewBindings.findChildViewById(rootView, id);
      if (sortFieldModifiedRadio == null) {
        break missingId;
      }

      id = R.id.sort_field_radio_group;
      RadioGroup sortFieldRadioGroup = ViewBindings.findChildViewById(rootView, id);
      if (sortFieldRadioGroup == null) {
        break missingId;
      }

      id = R.id.sort_field_title_radio;
      RadioButton sortFieldTitleRadio = ViewBindings.findChildViewById(rootView, id);
      if (sortFieldTitleRadio == null) {
        break missingId;
      }

      return new DialogSortBinding((ScrollView) rootView, sortDirectionAscRadio,
          sortDirectionDescRadio, sortDirectionHeaderTxv, sortDirectionRadioGroup,
          sortFieldAddedRadio, sortFieldHeaderTxv, sortFieldModifiedRadio, sortFieldRadioGroup,
          sortFieldTitleRadio);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
