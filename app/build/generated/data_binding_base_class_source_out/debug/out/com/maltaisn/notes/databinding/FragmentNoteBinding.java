// Generated by view binder compiler. Do not edit!
package com.maltaisn.notes.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.constraintlayout.widget.Group;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.maltaisn.notes.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentNoteBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final FloatingActionButton fab;

  @NonNull
  public final CoordinatorLayout fragmentNoteLayout;

  @NonNull
  public final Group placeholderGroup;

  @NonNull
  public final AppCompatImageView placeholderImv;

  @NonNull
  public final TextView placeholderTxv;

  @NonNull
  public final RecyclerView recyclerView;

  @NonNull
  public final MaterialToolbar toolbar;

  @NonNull
  public final AppBarLayout toolbarLayout;

  private FragmentNoteBinding(@NonNull CoordinatorLayout rootView,
      @NonNull FloatingActionButton fab, @NonNull CoordinatorLayout fragmentNoteLayout,
      @NonNull Group placeholderGroup, @NonNull AppCompatImageView placeholderImv,
      @NonNull TextView placeholderTxv, @NonNull RecyclerView recyclerView,
      @NonNull MaterialToolbar toolbar, @NonNull AppBarLayout toolbarLayout) {
    this.rootView = rootView;
    this.fab = fab;
    this.fragmentNoteLayout = fragmentNoteLayout;
    this.placeholderGroup = placeholderGroup;
    this.placeholderImv = placeholderImv;
    this.placeholderTxv = placeholderTxv;
    this.recyclerView = recyclerView;
    this.toolbar = toolbar;
    this.toolbarLayout = toolbarLayout;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentNoteBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentNoteBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_note, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentNoteBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.fab;
      FloatingActionButton fab = ViewBindings.findChildViewById(rootView, id);
      if (fab == null) {
        break missingId;
      }

      CoordinatorLayout fragmentNoteLayout = (CoordinatorLayout) rootView;

      id = R.id.placeholder_group;
      Group placeholderGroup = ViewBindings.findChildViewById(rootView, id);
      if (placeholderGroup == null) {
        break missingId;
      }

      id = R.id.placeholder_imv;
      AppCompatImageView placeholderImv = ViewBindings.findChildViewById(rootView, id);
      if (placeholderImv == null) {
        break missingId;
      }

      id = R.id.placeholder_txv;
      TextView placeholderTxv = ViewBindings.findChildViewById(rootView, id);
      if (placeholderTxv == null) {
        break missingId;
      }

      id = R.id.recycler_view;
      RecyclerView recyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.toolbar_layout;
      AppBarLayout toolbarLayout = ViewBindings.findChildViewById(rootView, id);
      if (toolbarLayout == null) {
        break missingId;
      }

      return new FragmentNoteBinding((CoordinatorLayout) rootView, fab, fragmentNoteLayout,
          placeholderGroup, placeholderImv, placeholderTxv, recyclerView, toolbar, toolbarLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
