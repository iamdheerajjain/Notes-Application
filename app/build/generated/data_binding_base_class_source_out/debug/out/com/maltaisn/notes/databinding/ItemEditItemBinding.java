// Generated by view binder compiler. Do not edit!
package com.maltaisn.notes.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.checkbox.MaterialCheckBox;
import com.maltaisn.notes.R;
import com.maltaisn.notes.ui.edit.adapter.EditEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemEditItemBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final EditEditText contentEdt;

  @NonNull
  public final ImageView deleteImv;

  @NonNull
  public final ImageView dragImv;

  @NonNull
  public final MaterialCheckBox itemChk;

  private ItemEditItemBinding(@NonNull LinearLayout rootView, @NonNull EditEditText contentEdt,
      @NonNull ImageView deleteImv, @NonNull ImageView dragImv, @NonNull MaterialCheckBox itemChk) {
    this.rootView = rootView;
    this.contentEdt = contentEdt;
    this.deleteImv = deleteImv;
    this.dragImv = dragImv;
    this.itemChk = itemChk;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemEditItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemEditItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_edit_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemEditItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.content_edt;
      EditEditText contentEdt = ViewBindings.findChildViewById(rootView, id);
      if (contentEdt == null) {
        break missingId;
      }

      id = R.id.delete_imv;
      ImageView deleteImv = ViewBindings.findChildViewById(rootView, id);
      if (deleteImv == null) {
        break missingId;
      }

      id = R.id.drag_imv;
      ImageView dragImv = ViewBindings.findChildViewById(rootView, id);
      if (dragImv == null) {
        break missingId;
      }

      id = R.id.item_chk;
      MaterialCheckBox itemChk = ViewBindings.findChildViewById(rootView, id);
      if (itemChk == null) {
        break missingId;
      }

      return new ItemEditItemBinding((LinearLayout) rootView, contentEdt, deleteImv, dragImv,
          itemChk);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
