// Generated by view binder compiler. Do not edit!
package com.maltaisn.notes.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.maltaisn.notes.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemLabelBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final ImageView hiddenImv;

  @NonNull
  public final ImageView labelImv;

  @NonNull
  public final ConstraintLayout labelLayout;

  @NonNull
  public final TextView labelTxv;

  private ItemLabelBinding(@NonNull FrameLayout rootView, @NonNull ImageView hiddenImv,
      @NonNull ImageView labelImv, @NonNull ConstraintLayout labelLayout,
      @NonNull TextView labelTxv) {
    this.rootView = rootView;
    this.hiddenImv = hiddenImv;
    this.labelImv = labelImv;
    this.labelLayout = labelLayout;
    this.labelTxv = labelTxv;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemLabelBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemLabelBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_label, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemLabelBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.hidden_imv;
      ImageView hiddenImv = ViewBindings.findChildViewById(rootView, id);
      if (hiddenImv == null) {
        break missingId;
      }

      id = R.id.label_imv;
      ImageView labelImv = ViewBindings.findChildViewById(rootView, id);
      if (labelImv == null) {
        break missingId;
      }

      id = R.id.label_layout;
      ConstraintLayout labelLayout = ViewBindings.findChildViewById(rootView, id);
      if (labelLayout == null) {
        break missingId;
      }

      id = R.id.label_txv;
      TextView labelTxv = ViewBindings.findChildViewById(rootView, id);
      if (labelTxv == null) {
        break missingId;
      }

      return new ItemLabelBinding((FrameLayout) rootView, hiddenImv, labelImv, labelLayout,
          labelTxv);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
