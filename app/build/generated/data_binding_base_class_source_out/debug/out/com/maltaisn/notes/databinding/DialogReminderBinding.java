// Generated by view binder compiler. Do not edit!
package com.maltaisn.notes.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.maltaisn.notes.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogReminderBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final View dateForegroundView;

  @NonNull
  public final ImageView dateImv;

  @NonNull
  public final TextInputEditText dateInput;

  @NonNull
  public final TextInputLayout dateInputLayout;

  @NonNull
  public final TextView dateLabelTxv;

  @NonNull
  public final TextView invalidTimeTxv;

  @NonNull
  public final View recurrenceForegroundView;

  @NonNull
  public final ImageView recurrenceImv;

  @NonNull
  public final TextView recurrenceTxv;

  @NonNull
  public final View timeForegroundView;

  @NonNull
  public final ImageView timeImv;

  @NonNull
  public final TextInputEditText timeInput;

  @NonNull
  public final TextInputLayout timeInputLayout;

  @NonNull
  public final TextView timeLabelTxv;

  private DialogReminderBinding(@NonNull ConstraintLayout rootView,
      @NonNull View dateForegroundView, @NonNull ImageView dateImv,
      @NonNull TextInputEditText dateInput, @NonNull TextInputLayout dateInputLayout,
      @NonNull TextView dateLabelTxv, @NonNull TextView invalidTimeTxv,
      @NonNull View recurrenceForegroundView, @NonNull ImageView recurrenceImv,
      @NonNull TextView recurrenceTxv, @NonNull View timeForegroundView, @NonNull ImageView timeImv,
      @NonNull TextInputEditText timeInput, @NonNull TextInputLayout timeInputLayout,
      @NonNull TextView timeLabelTxv) {
    this.rootView = rootView;
    this.dateForegroundView = dateForegroundView;
    this.dateImv = dateImv;
    this.dateInput = dateInput;
    this.dateInputLayout = dateInputLayout;
    this.dateLabelTxv = dateLabelTxv;
    this.invalidTimeTxv = invalidTimeTxv;
    this.recurrenceForegroundView = recurrenceForegroundView;
    this.recurrenceImv = recurrenceImv;
    this.recurrenceTxv = recurrenceTxv;
    this.timeForegroundView = timeForegroundView;
    this.timeImv = timeImv;
    this.timeInput = timeInput;
    this.timeInputLayout = timeInputLayout;
    this.timeLabelTxv = timeLabelTxv;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogReminderBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogReminderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_reminder, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogReminderBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.date_foreground_view;
      View dateForegroundView = ViewBindings.findChildViewById(rootView, id);
      if (dateForegroundView == null) {
        break missingId;
      }

      id = R.id.date_imv;
      ImageView dateImv = ViewBindings.findChildViewById(rootView, id);
      if (dateImv == null) {
        break missingId;
      }

      id = R.id.date_input;
      TextInputEditText dateInput = ViewBindings.findChildViewById(rootView, id);
      if (dateInput == null) {
        break missingId;
      }

      id = R.id.date_input_layout;
      TextInputLayout dateInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (dateInputLayout == null) {
        break missingId;
      }

      id = R.id.date_label_txv;
      TextView dateLabelTxv = ViewBindings.findChildViewById(rootView, id);
      if (dateLabelTxv == null) {
        break missingId;
      }

      id = R.id.invalid_time_txv;
      TextView invalidTimeTxv = ViewBindings.findChildViewById(rootView, id);
      if (invalidTimeTxv == null) {
        break missingId;
      }

      id = R.id.recurrence_foreground_view;
      View recurrenceForegroundView = ViewBindings.findChildViewById(rootView, id);
      if (recurrenceForegroundView == null) {
        break missingId;
      }

      id = R.id.recurrence_imv;
      ImageView recurrenceImv = ViewBindings.findChildViewById(rootView, id);
      if (recurrenceImv == null) {
        break missingId;
      }

      id = R.id.recurrence_txv;
      TextView recurrenceTxv = ViewBindings.findChildViewById(rootView, id);
      if (recurrenceTxv == null) {
        break missingId;
      }

      id = R.id.time_foreground_view;
      View timeForegroundView = ViewBindings.findChildViewById(rootView, id);
      if (timeForegroundView == null) {
        break missingId;
      }

      id = R.id.time_imv;
      ImageView timeImv = ViewBindings.findChildViewById(rootView, id);
      if (timeImv == null) {
        break missingId;
      }

      id = R.id.time_input;
      TextInputEditText timeInput = ViewBindings.findChildViewById(rootView, id);
      if (timeInput == null) {
        break missingId;
      }

      id = R.id.time_input_layout;
      TextInputLayout timeInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (timeInputLayout == null) {
        break missingId;
      }

      id = R.id.time_label_txv;
      TextView timeLabelTxv = ViewBindings.findChildViewById(rootView, id);
      if (timeLabelTxv == null) {
        break missingId;
      }

      return new DialogReminderBinding((ConstraintLayout) rootView, dateForegroundView, dateImv,
          dateInput, dateInputLayout, dateLabelTxv, invalidTimeTxv, recurrenceForegroundView,
          recurrenceImv, recurrenceTxv, timeForegroundView, timeImv, timeInput, timeInputLayout,
          timeLabelTxv);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
